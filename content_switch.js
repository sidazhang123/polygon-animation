var chrome = navigator.userAgent.indexOf('Chrome') > -1;
var firefox = navigator.userAgent.indexOf('Firefox') > -1;
var opera = navigator.userAgent.toLowerCase().indexOf("opr") > -1;
if (chrome || firefox || opera) {
    // Pure CSS employs better effects
    $('head').append('<link rel="stylesheet" type="text/css" href="my_animation.css">');
    $.getScript("classList.js");
    // toggling classes to animate
    $.getScript("timeline.js");
} else {
    // GSAP pure matrix transformation maximises compatibility
    $('#svg_con').prepend('<canvas width=\"1366\" height=\"480\"></canvas>');
    $('head').append("<style>\n" +
        "        canvas {\n" +
        "            display: block;\n" +
        "            width: 100%;\n" +
        "            visibility: hidden;\n" +
        "        }\n" +
        "\n" +
        "        svg {\n" +
        "            position: absolute;\n" +
        "            top: 0;\n" +
        "            left: 0;\n" +
        "            width: 100%;\n" +
        "        }\n" +
        "        #svg_con{\n" +
        "            position:relative;width:100%;\n" +
        "        }\n" +
        "    </style>");

    const ids = [
        ["p1"],
        ["p2"],
        ["p3"],
        ["p4"],
        ["p5"],
        ["p6"],
        ["p7", "p7_1"],
        ["p8"],
        ["p9", "p9_1", "p9_2", "p9_3"],
        ["p10", "p10_1", "p10_2"],
        ["p11", "p11_1"],
        ["p12", "p12_1"],
        ["p13", "p13_1", "p13_2", "p13_3"],
        ["p14"],
        ["p15", "p15_1"],
        ["p16"],
        ["p17"]
    ];
    // opacity:[triangle group]
    const pre_explosion = {
        1: ['p3', 'p4', 'p7', 'p9', 'p10_2', 'p11_1', 'p15', 'p5', 'p2', 'p1', 'p10', 'p10_1', 'p6', 'p13_2', 'p11', 'p13_3', 'p16', 'p13_1'],
        0.6: ['p7_1', 'p13', 'p17'],
        0.3: ['p9_3', 'p9_2', 'p12'],
        0.1: ['p9_1', 'p12_1', 'p14', 'p15_1', 'p8']
    };
    // moved coordinates (in percentage), durations, randomly generated by "coordinates.scss"
    var offset_x = [-26.0650273426, -12.7127632569, 54.6369468234, 26.5, 19.8509230328, -32.3702910152, -51.6187950266, 63.3771563995, -3.7759223463, -61.9150311515, 26.2023322279, -20.9643426533, 47.2294641855, -53.7401153702, -47.531396795, 28.5227943631, 1.3959798681, -23.8211076386, -30.1787153336, -0.3472963553, -67.6023638653, 45.4298669372, 0.6457390382, 58.0036983703, -11.576150413, 42.4352447854, 3.4345619168, -22.7860521516, -57.2221515618];
    var offset_y = [-24.72135955, -9.4414764793, -40.754317332, -12.1644951198, 11, 26.5, -7.2811529494, -13.215728212, 1.6934532692, 5.7522790213, -58.9191425505, 66.3479606057, 7.8784620241, 13.7818677909, -2.9088577215, -3.0467335851, -24.256087312, -40.2561872614, -59.2396498312, -76.9009356751, -26.8467875173, 10.2606042998, 1.149813096, 23.1879442421, -49.7278473101, 48.7185032393, -42.0011977344, -37.4553637633, -20.8608542098];
    const t = [8, 9, 11, 14, 11, 10, 9, 10, 15, 11, 11, 10, 13, 11, 10, 11, 10, 14, 10, 10, 10, 15, 10, 11, 8, 15, 14, 14, 9];


    var int = setInterval(function () {
        do {
            if ($('#p2').length > 0) {
                clearInterval(int);
                var container = $("#svg_con");
                var con_h = container.height();
                var con_w = container.width();
                // cal absolute offsets
                offset_x = offset_x.map(function (x) {
                    return x * con_w / 100
                });
                offset_y = offset_y.map(function (y) {
                    return y * con_h / 100
                });
                start(ids, offset_x, offset_y, pre_explosion, t);
            }
        } while ($('#p2').length <= 0);
    }, 100);


}

function start(ids, offset_x, offset_y, pre_explosion, t) {
    var timeline = new TimelineLite();
    // phase 1 - triangles appears by group
    for (var i = 0; i < ids.length; i++) {
        var ani_group_id = "phase1_group" + (i + 1).toString();
        timeline.addLabel(ani_group_id, "-=0.2");
        for (var j = 0; j < ids[i].length; j++) {
            timeline.to("#" + ids[i][j], 0.3, {
                opacity: 1,
                ease: Sine.easeOut
            }, ani_group_id)
        }
    }
    // phase 2 - scale down as a whole
    timeline.to("#layer_1", 0.5, {
        scale: 0.5,
        transformOrigin: "50% 50%"
    });
    // phase 3 - opacity changes as in phase 4
    timeline.addLabel(ani_group_id, "opacityChange");
    for (var k in pre_explosion) {
        for (var i = 0; i < pre_explosion[k].length; i++) {
            timeline.to("#" + pre_explosion[k][i], 0.1, {
                opacity: k
            }, "opacityChange")
        }
    }
    // phase 4 - eject all triangles
    var ind = 0;
    var tri_id;
    timeline.addLabel(ani_group_id, "eject");
    for (var i = 0; i < ids.length; i++) {
        for (var j = 0; j < ids[i].length; j++) {
            tri_id = "#" + ids[i][j];
            timeline.to(tri_id, 1.5, {
                transform: "translate(" + offset_x[ind].toString() + "px," + offset_y[ind].toString() + "px)",
                transformOrigin: "50% 50%"
            }, "eject");
            ind += 1
        }
    }
    // phase 5 - spin
    ind = 0;
    timeline.addLabel(ani_group_id, "spin");
    for (var i = 0; i < ids.length; i++) {
        for (var j = 0; j < ids[i].length; j++) {
            timeline.to("#" + ids[i][j], t[ind], {
                rotation: (ind % 2 === 0 ? "+" : "-") + "=360",
                transformPerspective: 100,
                repeat: -1,
                ease: Linear.easeNone
            }, "spin");
            ind += 1
        }
    }
}


